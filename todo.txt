FEATURE TASK LIST:






7. Teacher Dashboard:
   - [ ] Implement functional elements for the teacher dashboard (e.g., quick access to manage groups, sessions, etc.).

8. Student Dashboard:
   - [ ] Create a dedicated dashboard view for students.
   - [ ] Implement functional elements for the student dashboard (e.g., overview of enrolled groups, upcoming sessions, etc.).






17. Todo List (All Users):
    - [ ] Design and implement a "Todo List" feature accessible to all user roles (admin, teacher, student).
    - [ ] Allow users to create, read, update, and delete their own todo items.

18. Admin Dashboard:
    - [ ] Create a dedicated dashboard view for administrators.
    - [ ] add the ability to add course name and year and other necessary things .
    - [ ] make a collecton for this .
    - [ ] make all the options dynamic .

    - [ ] Implement the display of the following statistics on the admin dashboard:
        - [ ] Total number of students.
        - [ ] Total number of teachers.
        - [ ] Total number of groups.
        - [ ] Total number of active sessions.
        - [ ] Total number of sessions.




task schema 
{
  "taskID": "string",
  "sessionId": "string",
  "groupID": "string",
  "ownerId": "string",
  "subject": "string",
  "description": "string",
  "category": "string",
  "tags": ["string"],
  "deadline": "string (ISO 8601 format)",
  "totalMarks": "number",
  "gradingRubric": {
    "criteria": [
      {
        "criterionId": "string",
        "description": "string",
        "maxPoints": "number"
      }
    ],
    "notes": "string"
  },
  "tasks": [
    {
      "taskId": "string",
      "question": "string",
      "taskDetails": {
        "description": "string",
        "points": "number",
        "type": "string",
        "attachments": [
          {
            "filename": "string",
            "url": "string"
          }
        ],
        "timeLimit": "string",
        "difficulty": "string"
      },
      "dependencies": ["string"],
      "learningObjectives": ["string"],
      "membersProgress": [
        {
          "memberId": "string",
          "taskState": "string",
          "obtainedMarks": "number | null",
          "submissionDetails": {
            "submittedAt": "string (ISO 8601 format)",
            "answer": "string | null",
            "fileUrl": "string | null",
            "feedback": "string | null",
            "attachments": [
              {
                "filename": "string",
                "url": "string"
              }
            ],
            "urls": ["string"],
            "gradedBy": "string | null",
            "gradedAt": "string (ISO 8601 format) | null",
            "criterionScores": {
              "string": "number" // Key is criterionId from gradingRubric
            }
          }
        }
      ]
    }
  ],
  "settings": {
    "allowLateSubmissions": "boolean",
    "lateSubmissionPenalty": "number",
    "gradingScheme": "string",
    "submissionType": "string",
    "reviewSettings": {
      "peerReview": "boolean",
      "instructorReview": "boolean"
    }
  },
  "announcements": [
    {
      "announcementId": "string",
      "title": "string",
      "content": "string",
      "createdAt": "string (ISO 8601 format)",
      "authorId": "string"
    }
  ],
  "resources": [
    {
      "resourceId": "string",
      "title": "string",
      "url": "string",
      "type": "string"
    }
  ],
  "createdAt": "string (ISO 8601 format)",
  "updatedAt": "string (ISO 8601 format)"
}



